@mixin listGroup() {
	position: relative;
	display: flex;
	flex-direction: column;
	padding: 0;
	margin: 0;
	width: 100%;
	max-width: 100%;
	min-width: 0;
	border-radius: $smBorderRadius;
	background-color: $bgCard;
	color: $mainFont;
	list-style-type: none;
	& > *:first-child {
		border-radius: $smBorderRadius $smBorderRadius 0 0;
	}
	& > *:last-child {
		border-radius: 0 0 $smBorderRadius $smBorderRadius;
		border-bottom: none;
		& > .dui__list__group__collapse__toggle {
			border-radius: 0 0 $smBorderRadius $smBorderRadius;
		}
	}
	@include listGroupPigmentOptions();
	&--contrast {
		@include listGroupPigmentOptions($contrastPigments);
	}
}

@mixin listGroupPigmentOptions($options: $pigments) {
	$pigmentKeys: map-keys($options);
	@each $key in $pigmentKeys {
		$name: map-deep-get($options, $key, "name");
		$bgColor: map-deep-get($options, $key, "bgColor");
		$fontColor: map-deep-get($options, $key, "fontColor");
		&.dui__list__group--#{$name} {
			background-color: $bgColor;
			color: $fontColor;
			.dui__list__group__header {
				color: rgba($fontColor, 0.7);
			}
			.dui__list__group__item {
				&--active {
					background-color: rgba($fontColor, 0.15);
				}
				&:hover {
					background-color: rgba($fontColor, 0.02);
				}
			}
			& > * {
				border-bottom: 0.0625rem solid rgba($fontColor, 0.1);
			}
		}
	}
}

@mixin listGroupItemPigmentOptions($item: "header", $options: $pigments) {
	$pigmentKeys: map-keys($options);
	@each $key in $pigmentKeys {
		$name: map-deep-get($options, $key, "name");
		$bgColor: map-deep-get($options, $key, "bgColor");
		$fontColor: map-deep-get($options, $key, "fontColor");
		&.dui__list__group__#{$item}--#{$name} {
			background-color: $bgColor;
			color: $fontColor;
			border-bottom: 0.0625rem solid rgba($fontColor, 0.1);
			&.dui__list__group__header {
				color: rgba($fontColor, 0.7);
			}
			&.dui__list__group__item {
				&--active {
					background-color: darken($bgColor, 5%);
				}
				&:hover {
					background-color: darken($bgColor, 2.5%);
				}
			}
			&.dui__list__group__collapse {
				.dui__list__group__collapse__toggle {
					&:hover {
						background-color: darken($bgColor, 2.5%);
					}
					&:focus-visible {
						box-shadow: 0 0 0 0.25rem rgba($bgColor, 0.5), 0 0 0 0.1rem rgba($fontColor, 0.25);
					}
				}
				.dui__list__group__collapse__content {
					border-top: 0.0625rem solid rgba($fontColor, 0.1);
					.dui__list__group__collapse {
						&::before {
							background-color: rgba($fontColor, 0.2);
						}
						&__content {
							border-top: none;
						}
					}
				}
			}
		}
	}
}

@mixin headerItemDuplicates() {
	position: relative;
	padding: 0.625rem 1rem;
	line-height: 1.5;
	margin: 0;
	background-color: inherit;
	border-bottom: 0.0625rem solid rgba($subFont, 0.1);
}

@mixin listGroupHeader() {
	@include headerItemDuplicates();
	display: flex;
	align-items: center;
	color: rgba($mainFont, 0.7);
	font-weight: 600;
	&--align {
		&-center {
			justify-content: center;
		}
		&-right {
			justify-content: flex-end;
		}
	}
	@include listGroupItemPigmentOptions();
	&--contrast {
		@include listGroupItemPigmentOptions("header", $contrastPigments);
	}
}

@mixin listGroupItem() {
	@include headerItemDuplicates();
	display: block;
	color: inherit;
	&:hover {
		background-color: darken($bgCard, 1.5%);
	}
	&--active {
		background-color: darken($bgCard, 3.5%);
	}
	@include listGroupItemPigmentOptions("item");
	&--contrast {
		@include listGroupItemPigmentOptions("item", $contrastPigments);
	}
}

@mixin listGroupCollapse {
	position: relative;
	background-color: inherit;
	border-bottom: 0.0625rem solid rgba($subFont, 0.1);
	&__toggle {
		position: relative;
		padding: 0.625rem 1rem;
		line-height: 1.5;
		margin: 0;
		background-color: inherit;
		display: flex;
		align-items: center;
		user-select: none;
		cursor: pointer;
		&__title {
			flex: 1;
		}
		&:hover {
			background-color: darken($bgCard, 1.5%);
		}
		&:focus {
			outline: none;
		}
		&:focus-visible {
			box-shadow: 0 0 0 0.25rem rgba($bg, 0.5), 0 0 0 0.1rem rgba($mainFont, 0.25);
		}
	}
	&__content {
		padding: 1rem;
		border-top: 0.0625rem solid rgba($subFont, 0.1);
		.dui__list__group__collapse {
			border-bottom: none;
			padding-left: 1.125rem;
			&::before {
				pointer-events: none;
				content: "";
				display: block;
				position: absolute;
				top: 0;
				left: 0;
				width: 0.125rem;
				height: 100%;
				background-color: rgba($subFont, 0.2);
				border-radius: $smBorderRadius;
			}
			&__toggle {
				padding: 0.625rem 1rem;
				border-radius: $smBorderRadius;
			}
			&__content {
				padding: 1rem 0 0 0;
				border-top: none;
			}
			&--no-indent {
				padding-left: 0;
				&::before {
					display: none;
				}
			}
		}
	}
	@include listGroupItemPigmentOptions("collapse");
	&--contrast {
		@include listGroupItemPigmentOptions("collapse", $contrastPigments);
	}
}

.dui__list__group {
	@include listGroup();
	&__loader {
		@include componentLoader();
	}
	&__header {
		@include listGroupHeader();
	}
	&__item {
		@include listGroupItem();
	}
	&__collapse {
		@include listGroupCollapse();
	}

	&--loading {
		cursor: progress;
		& > *:nth-child(2):not(.dui__list__group__loader) {
			border-radius: $smBorderRadius $smBorderRadius 0 0;
		}
		&-disabled {
			pointer-events: none;
		}
	}
	&--flat {
		border-radius: $flatBorderRadius;
		& > * {
			border-radius: $flatBorderRadius;
		}
		.dui__list__group__loader {
			border-radius: $flatBorderRadius;
		}
		.dui__list__group__collapse {
			&::before {
				border-radius: $flatBorderRadius;
			}
			&__toggle {
				border-radius: $flatBorderRadius;
			}
		}
		& > *:last-child {
			& > .dui__list__group__collapse__toggle {
				border-radius: $flatBorderRadius;
			}
		}
	}
}
