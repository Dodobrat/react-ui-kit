@mixin btn() {
	transition: all 0.15s ease;
	position: relative;
	height: $md;
	margin: 0;
	padding: 0 $mdFont;
	background-color: transparent;
	border: 1px solid transparent;
	width: auto;
	border-radius: $smBorderRadius;
	font-size: $mdFont;
	font-weight: 400;
	color: $mainFont;
	overflow: hidden;
	user-select: none;
	cursor: pointer;
	line-height: 1;
	outline: none;
	text-decoration: none;

	& > i {
		font-size: $mdFont;
	}

	&:focus {
		box-shadow: 0 0 0 0.2rem rgba(0, 0, 0, 0.1);
	}

	&:hover {
		transition: all 0.15s ease;
	}

	&:disabled {
		pointer-events: none;
		opacity: 0.5;
	}
}

@mixin btnLoader($spinnerColor) {
	color: rgba($spinnerColor, 0.1);
	& > svg {
		pointer-events: none;
		fill: transparent;
		z-index: 2;
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		width: 100%;
		height: 100%;
		animation: rotate 2s linear infinite;

		& > circle {
			stroke: $spinnerColor;
			stroke-linecap: round;
			fill: none;
			animation: dash 2s ease-in-out infinite;
		}
	}
}

@keyframes rotate {
	100% {
		transform: translate(-50%, -50%) rotate(360deg);
	}
}

@keyframes dash {
	0% {
		stroke-dasharray: 0, 55;
		stroke-dashoffset: 0;
	}
	50% {
		stroke-dasharray: 20, 55;
		stroke-dashoffset: -15;
	}
	100% {
		stroke-dasharray: 30, 55;
		stroke-dashoffset: -31;
	}
}

.dui__btn {
	@include btn();
	&--loading {
		cursor: progress;
		@include btnLoader($lightFont);
	}
	@each $name, $size, $font in $btnSizes {
		&.dui__btn--#{$name} {
			height: $size;
			font-size: $font;
			padding: 0 $font;
		}
	}
	&--round {
		border-radius: $roundBorderRadius;
	}
	&--wide {
		width: 100%;
	}
	&--flex {
		display: flex;
		justify-content: center;
		align-items: center;
	}
	&--no-wrap {
		white-space: nowrap;
		text-overflow: ellipsis;
	}
	&--left-align {
		text-align: left;
		&.dui__btn--flex {
			justify-content: flex-start;
		}
	}
	@each $name, $color, $font in $btnPigments {
		&.dui__btn--pigment-#{$name} {
			background-color: $color;
			color: $font;
			&:hover,
			&.dui__btn--active {
				background-color: darken(rgbaToRgb($color), 5%);
			}
			&:focus {
				box-shadow: 0 0 0 0.2rem rgba($color, 0.25);
			}
			&.dui__btn--loading {
				@include btnLoader($font);
			}
		}
	}
	&--outlined {
		@each $name, $color, $font in $btnPigments {
			&.dui__btn--pigment-#{$name} {
				background-color: transparent;
				color: $color;
				border: 1px solid rgba($color, 0.75);
				&.dui__btn--loading {
					@include btnLoader($color);
				}
				&:hover,
				&.dui__btn--active {
					background-color: rgba(rgbaToRgb($color), 0.1);
					color: $color;
					border: 1px solid $color;
					&.dui__btn--loading {
						@include btnLoader($color);
					}
				}
			}
		}
	}
	&--modern {
		@each $name, $color, $font in $btnModernPigments {
			&.dui__btn--pigment-#{$name} {
				background-color: rgbaToRgb($color);
				color: $font;
				&:hover,
				&.dui__btn--active {
					background-color: darken(rgbaToRgb($color), 5%);
				}
				&:focus {
					box-shadow: 0 0 0 0.2rem rgba($font, 0.25);
				}
				&.dui__btn--loading {
					@include btnLoader($font);
				}
			}
		}
	}
	&-group {
		position: relative;
		display: inline-flex;
		align-items: center;
		border-radius: $smBorderRadius;
		&:focus {
			outline: none;
			box-shadow: 0 0 0 0.2rem rgba(0, 0, 0, 0.1);
		}
		& > * {
			border-radius: 0;
			&:focus {
				z-index: 2;
			}
		}
		& > *:first-child {
			border-radius: $smBorderRadius 0 0 $smBorderRadius;
		}
		& > *:last-child {
			border-radius: 0 $smBorderRadius $smBorderRadius 0;
		}
		&--wide {
			width: 100%;
			& > * {
				flex: 1;
			}
		}
		&--round {
			border-radius: $roundBorderRadius;
			& > *:first-child {
				border-radius: $roundBorderRadius 0 0 $roundBorderRadius;
			}
			& > *:last-child {
				border-radius: 0 $roundBorderRadius $roundBorderRadius 0;
			}
		}
		&--vertical {
			flex-direction: column;
			justify-content: center;
			align-items: flex-start;
			& > * {
				width: 100%;
			}
			& > *:first-child {
				border-radius: $smBorderRadius $smBorderRadius 0 0;
			}
			& > *:last-child {
				border-radius: 0 0 $smBorderRadius $smBorderRadius;
			}
			&.dui__btn-group--round {
				border-radius: $lgBorderRadius;
				& > *:first-child {
					border-radius: $lgBorderRadius $lgBorderRadius 0 0;
				}
				& > *:last-child {
					border-radius: 0 0 $lgBorderRadius $lgBorderRadius;
				}
			}
		}
	}
}
