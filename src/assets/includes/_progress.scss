@mixin progressBar($bgColor, $fontColor, $animated: false) {
	.dodo-ui__progress-bar__progress {
		position: relative;
		width: 0;
		height: 100%;
		background: $bgColor;
		color: $fontColor;
		overflow: hidden;

		&--allow-overflow {
			overflow: visible;
		}

		&:hover {
			background-color: darken($bgColor, 5%);
		}
		&__label {
			font-size: $smFont;
			font-weight: 600;
			line-height: 1;
			position: absolute;
			top: 50%;
			left: 0;
			transform: translate(25%, -50%);
			user-select: none;
			white-space: nowrap;
			@each $name, $top, $left, $right, $translate in $progressBarLabelPositions {
				&.dodo-ui__progress-bar__progress__label--position-#{$name} {
					top: $top;
					left: $left;
					right: $right;
					transform: $translate;
					@if ($name == "outer") {
						background: $bgColor;
						padding: 0.25rem 0.3125rem;
						&::after {
							content: "";
							display: block;
							position: absolute;
							left: calc(50% - 0.25rem);
							width: 0.5rem;
							height: 0.5rem;
							background: $bgColor;
							transform: rotate(-45deg);
							z-index: -1;
						}
					}
				}
			}
		}

		@if ($animated) {
			overflow: hidden;
			&::after {
				content: "";
				display: block;
				top: 0;
				position: absolute;
				width: 100%;
				height: 100%;
				transform: translateX(-100%);
				background: linear-gradient(90deg, transparent, rgba($fontColor, 0.5), transparent);
				animation: loading 2s infinite;
			}

			@keyframes loading {
				0%,
				50% {
					transform: translateX(-100%);
				}
				100% {
					transform: translateX(100%);
				}
			}
		}
	}
	&.dodo-ui__progress-bar--minified {
		margin-top: 1.1rem;
		.dodo-ui__progress-bar__progress {
			&__label {
				top: 0;
				transform: translate(25%, -125%);
				color: $bgColor;
				@each $name, $top, $left, $right, $translate in $progressBarMinifiedLabelPositions {
					&.dodo-ui__progress-bar__progress__label--position-#{$name} {
						top: $top;
						left: $left;
						right: $right;
						transform: $translate;
						@if ($name == "outer") {
							color: $fontColor;
						}
					}
				}
			}
		}
	}
}

@mixin progressCircle($bgColor, $fontColor, $modern: false) {
	& > circle {
		fill: transparent;
		transition: stroke-dashoffset 0.425s ease-in-out;
		transform: rotate(-90deg);
		transform-origin: 50% 50%;
		@if ($modern) {
			stroke: $fontColor;
			stroke-linecap: round;
		} @else {
			stroke: $bgColor;
			stroke-linecap: unset;
		}
	}
	&.dodo-ui__progress-circle--reversed {
		& > circle {
			transform: rotate(-90deg) rotateX(180deg);
		}
	}
	.dodo-ui__progress-circle__track {
		@if ($modern) {
			stroke: $bgColor;
		} @else {
			stroke: darken($bg, 2.5%);
		}
	}
	.dodo-ui__progress-circle__label {
		font-weight: 900;
		stroke-width: 0;
		@if ($modern) {
			fill: $fontColor;
		} @else {
			fill: $bgColor;
		}
	}
}

.dodo-ui__progress {
	&-bar {
		position: relative;
		width: 100%;
		height: 1.4rem;
		background: darken($bg, 5%);
		border-radius: $smBorderRadius;
		.dodo-ui__progress-bar__progress {
			border-radius: $smBorderRadius;
			&__label {
				border-radius: $smBorderRadius;
			}
		}
		@each $name, $color, $font in $progressPigments {
			&.dodo-ui__progress-bar--pigment-#{$name} {
				@include progressBar($color, $font);
				&.dodo-ui__progress-bar--animated {
					@include progressBar($color, $font, true);
				}
			}
		}
		&--minified {
			height: 0.25rem;
		}
		&--modern {
			background: darken($bg, 2.5%);

			@each $name, $color, $font in $progressModernPigments {
				&.dodo-ui__progress-bar--pigment-#{$name} {
					@include progressBar($color, $font);
					&.dodo-ui__progress-bar--animated {
						@include progressBar($color, $font, true);
					}
				}
			}
		}
		&--rounded {
			border-radius: $roundBorderRadius;
			.dodo-ui__progress-bar__progress {
				border-radius: $roundBorderRadius;
				&__label {
					border-radius: $roundBorderRadius;
				}
			}
		}
	}
	&-circle {
		position: relative;
		user-select: none;
		@each $name, $color, $font in $progressPigments {
			&.dodo-ui__progress-circle--pigment-#{$name} {
				@include progressCircle($color, $font);
			}
		}
		&--modern {
			@each $name, $color, $font in $progressModernPigments {
				&.dodo-ui__progress-circle--pigment-#{$name} {
					@include progressCircle($color, $font, true);
				}
			}
		}
	}
}
