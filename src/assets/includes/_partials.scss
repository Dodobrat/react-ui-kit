// HEADING
.dui__heading {
	font-size: clamp(1rem, 2vw, 1.5rem);
	line-height: 1.2;
	font-weight: 300;
	&--centered {
		text-align: center;
		margin-left: auto;
		margin-right: auto;
	}
}

@each $elem, $fontSize in $headingOptions {
	#{$elem}.dui__heading {
		font-size: $fontSize;
	}
}

.dui__text {
	font-size: clamp(0.9rem, 2.75vw, 1rem);
	line-height: 1.4;
}

// SKELETON

@mixin skeletonPigmentOptions($options: $pigments) {
	$pigmentKeys: map-keys($options);
	@each $key in $pigmentKeys {
		$name: map-deep-get($options, $key, "name");
		$bgColor: map-deep-get($options, $key, "bgColor");
		$fontColor: map-deep-get($options, $key, "fontColor");
		&.dui__skeleton--#{$name} {
			background-color: $bgColor;
			&::after {
				background-image: linear-gradient(
					90deg,
					rgba($fontColor, 0) 0,
					rgba($fontColor, 0.3) 20%,
					rgba($fontColor, 0.6) 60%,
					rgba($fontColor, 0)
				);
			}
		}
	}
}

.dui__skeleton {
	display: inline-block;
	min-width: 10rem;
	height: 1rem;
	position: relative;
	overflow: hidden;
	background-color: rgba-to-rgb(rgba($subFont, 0.15));
	border-radius: $smBorderRadius;

	&::after {
		content: "";
		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		transform: translateX(-100%);
		background-image: linear-gradient(90deg, rgba($bgCard, 0) 0, rgba($bgCard, 0.5) 20%, rgba($bgCard, 0.8) 60%, rgba($bgCard, 0));
		animation: shimmer 2s infinite;
	}

	@include skeletonPigmentOptions();

	&--rounded {
		border-radius: $roundedBorderRadius;
	}

	&--flat {
		border-radius: $flatBorderRadius;
	}

	@keyframes shimmer {
		100% {
			transform: translateX(100%);
		}
	}
}

// DRAGSCROLL
.indiana-scroll-container {
	&--dragging {
		* {
			@include crossBrowser(user-select, none);
		}
		& > * {
			cursor: grabbing;
		}
	}
}

.indiana-dragging {
	cursor: grabbing !important;
}

@mixin dragIndicatorBg($deg) {
	background-color: inherit;
}

@mixin dragIndicatorPosition($position, $dir: "horizontal") {
	@if ($dir == "horizontal") {
		top: 0;
		bottom: 0;
		height: 100%;
		@if ($position == "startX") {
			left: 0;
			@include dragIndicatorBg(90deg);
		}
		@if ($position == "endX") {
			right: 0;
			@include dragIndicatorBg(270deg);
		}
	}
	@if ($dir == "vertical") {
		left: 0;
		right: 0;
		width: 100%;
		@if ($position == "startY") {
			top: 0;
			@include dragIndicatorBg(180deg);
		}
		@if ($position == "endY") {
			bottom: 0;
			@include dragIndicatorBg(0deg);
		}
	}
}

.dui__dragscroll__container {
	position: relative;
	background-color: inherit;
	&__indicator {
		position: absolute;
		display: flex;
		justify-content: center;
		align-items: center;
		cursor: pointer;
		padding: 1rem;
		z-index: 2;
		@include crossBrowser(user-select, none);

		&:focus {
			outline: none;
		}
		@include focusVisible();
		&--startX {
			@include dragIndicatorPosition("startX");
		}
		&--endX {
			@include dragIndicatorPosition("endX");
		}
		&--startY {
			@include dragIndicatorPosition("startY", "vertical");
		}
		&--endY {
			@include dragIndicatorPosition("endY", "vertical");
		}
	}
}

// BACK TO TOP
@mixin backTopPositionOptions($options: $backTopPositions) {
	$positionKeys: map-keys($options);
	@each $key in $positionKeys {
		$name: map-deep-get($options, $key, "name");
		$bottom: map-deep-get($options, $key, "bottom");
		$left: map-deep-get($options, $key, "left");
		$right: map-deep-get($options, $key, "right");
		$transform: map-deep-get($options, $key, "transform");
		&.dui__back-top--#{$name} {
			bottom: $bottom;
			left: $left;
			right: $right;
			transform: $transform;
		}
	}
}

.dui__back-top {
	position: fixed;
	z-index: 1100;
	@include backTopPositionOptions();
}
